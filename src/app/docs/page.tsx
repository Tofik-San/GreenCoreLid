"use client";
import { useEffect, useState } from "react";

export default function DocsPage() {
  const [plans, setPlans] = useState<any[]>([]);

  useEffect(() => {
    const API_URL =
      process.env.NEXT_PUBLIC_API_URL ||
      "https://web-production-310c7c.up.railway.app";

    fetch(`${API_URL}/plans`)
      .then((res) => res.json())
      .then((data) => {
        if (data?.plans && Array.isArray(data.plans)) setPlans(data.plans);
        else setPlans([]);
      })
      .catch(() => setPlans([]));
  }, []);

  const getPlanIcon = (name: string) => {
    switch (name?.toLowerCase()) {
      case "free":
        return "üå±";
      case "premium":
        return "üåø";
      case "supreme":
        return "üå≥";
      default:
        return "üåæ";
    }
  };

  return (
    <main className="min-h-screen px-10 py-16 text-center text-green-100">
      <h1 className="text-5xl mb-12 text-green-400 drop-shadow-[0_0_10px_rgba(163,255,163,0.7)]">
        –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API
      </h1>

      {/* –†–∞–∑–¥–µ–ª —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ */}
      <section>
        <h2 className="text-2xl mb-4 text-green-300">–≠–Ω–¥–ø–æ–∏–Ω—Ç—ã</h2>
        <ul className="mb-16 space-y-2 text-green-200">
          <li>GET /plants ‚Äî —Å–ø–∏—Å–æ–∫ —Ä–∞—Å—Ç–µ–Ω–∏–π</li>
          <li>POST /generate_key ‚Äî —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å API-–∫–ª—é—á</li>
          <li>GET /health ‚Äî –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞</li>
        </ul>
      </section>

      {/* –†–∞–∑–¥–µ–ª —Ç–∞—Ä–∏—Ñ–æ–≤ */}
      <section className="max-w-[1400px] mx-auto">
        <h2 className="text-3xl mb-10 text-green-400">–ü–ª–∞–Ω—ã</h2>
        {plans.length === 0 ? (
          <p className="text-green-300">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø–ª–∞–Ω–∞—Ö.</p>
        ) : (
          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-16 justify-items-center">
            {plans.map((plan: any) => (
              <div
                key={plan.id}
                className="bg-black/40 border-[2px] border-green-500/70 hover:border-green-400 transition-all duration-300 rounded-2xl shadow-[0_0_40px_rgba(83,255,148,0.2)] p-12 w-[360px] flex flex-col justify-between hover:shadow-[0_0_45px_rgba(83,255,148,0.4)]"
              >
                {/* –ò–∫–æ–Ω–∫–∞ –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ */}
                <div className="flex flex-col items-center mb-6">
                  <span className="text-6xl mb-4 drop-shadow-[0_0_15px_rgba(83,255,148,0.6)]">
                    {getPlanIcon(plan.name)}
                  </span>
                  <h3 className="text-3xl text-green-300 font-semibold drop-shadow-[0_0_6px_rgba(83,255,148,0.6)] uppercase">
                    {plan.name}
                  </h3>
                </div>

                {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —Ç–∞—Ä–∏—Ñ—É */}
                <div className="text-green-200 mb-10 text-base leading-relaxed space-y-4 text-left">
                  <p>
                    –û–±—â–µ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ:{" "}
                    <span className="text-green-400 font-medium">
                      {plan.limit_total}
                    </span>
                  </p>
                  <p>
                    –ú–∞–∫—Å. —Å—Ç—Ä–∞–Ω–∏—Ü–∞:{" "}
                    <span className="text-green-400 font-medium">
                      {plan.max_page}
                    </span>
                  </p>
                </div>

                {/* –¶–µ–Ω–∞ –∏ –∫–Ω–æ–ø–∫–∞ */}
                <div className="flex flex-col items-center mt-auto">
                  <p className="text-green-400 font-semibold text-xl mb-4">
                    {plan.price === 0 ? "–ë–ï–°–ü–õ–ê–¢–ù–û" : `${plan.price} ‚ÇΩ / –º–µ—Å`}
                  </p>
                  <button
                    className="px-10 py-3 rounded-xl bg-green-700/40 hover:bg-green-600/60 text-green-100 font-medium shadow-[0_0_20px_rgba(83,255,148,0.5)] transition"
                    onClick={() => alert(`–í—ã–±—Ä–∞–Ω –ø–ª–∞–Ω: ${plan.name}`)}
                  >
                    –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å
                  </button>
                </div>
              </div>
            ))}
          </div>
        )}
      </section>
    </main>
  );
}
